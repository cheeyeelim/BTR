// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// rcpp_validate
Rcpp::NumericVector rcpp_validate(Rcpp::NumericMatrix inf_mat, Rcpp::NumericMatrix true_mat);
RcppExport SEXP BTR_rcpp_validate(SEXP inf_matSEXP, SEXP true_matSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type inf_mat(inf_matSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type true_mat(true_matSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_validate(inf_mat, true_mat));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_simulate
Rcpp::List rcpp_simulate(Rcpp::List bmodel, Rcpp::LogicalVector fstate, bool verbose);
RcppExport SEXP BTR_rcpp_simulate(SEXP bmodelSEXP, SEXP fstateSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type bmodel(bmodelSEXP);
    Rcpp::traits::input_parameter< Rcpp::LogicalVector >::type fstate(fstateSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_simulate(bmodel, fstate, verbose));
    return rcpp_result_gen;
END_RCPP
}
